-- Combine Two Tables
select e.emp_id, e.first_name, e.last_name, b.branch_id, b.branch_name 
from employee e 
left join branch b 
on e.branch_id = b.branch_id ;  


-- Second Highest Salary
select max(e.salary)
from employee e 
where e.salary < (select max(e.salary) 
				from employee e2);


-- Third Highest Salary 
select max(e.salary)
from employee e 
where e.salary < (select max(e.salary) 
				from employee e 
				where e.salary < (select max(e.salary) 
								from employee e));


-- Nth Highest Salary 


-- Ranking by salary 
select e.salary, 
	(select count(distinct salary) 
	from employee e2 
	where e2.salary>=e.salary) as 'Rank'
from employee e 
order by e.salary desc;


-- Find numbers that appear at least three times consecutively
create table consecutive_nums (
	id int primary key,
	value varchar(3)
);

insert into consecutive_nums values (1, 1);
insert into consecutive_nums values (2, 1);
insert into consecutive_nums values (3, 1);
insert into consecutive_nums values (4, 2);
insert into consecutive_nums values (5, 3);
insert into consecutive_nums values (6, 4);

select c.value as repeating_nums
from consecutive_nums c
join consecutive_nums c2 
on c.id = c2.id+1 and c.value = c2.value
join consecutive_nums c3
on c.id = c3.id+2 and c.value = c3.value;


-- Employees earning more than their managers
select e.first_name as employee
from employee e 
join employee e2 
on e.supervisor_id = e2.emp_id and e.salary > e2.salary;
